import { z, ZodError } from "zod";

// 游닂 Schema de cria칞칚o
export const createAgendamentoSchema = z.object({
    data: z
        .string()
        .refine(
            (val) => !isNaN(Date.parse(val)),
            "Data do agendamento inv치lida"
        ),
    servico: z.string().nonempty("O servi칞o 칠 obrigat칩rio"),
    observacao: z.string().optional(),
    petId: z.number().int("ID do pet inv치lido"),
});

// 游닂 Schema de atualiza칞칚o (parcial)
export const updateAgendamentoSchema = createAgendamentoSchema.partial();

// 游닂 Schema de exclus칚o
export const deleteAgendamentoSchema = z.object({
    agendamentoId: z.number().int("ID do agendamento inv치lido"),
    solicitanteId: z.number().int("ID do solicitante inv치lido"), 
});

// 游닂 Fun칞칚o para formatar erros do Zod de forma bonita
export function formatZodError(error: unknown) {
    if (error instanceof ZodError) {
        return error.issues.map(err => ({
            campo: err.path.join("."),
            mensagem: err.message,
        }));
    }
    return [{ campo: "desconhecido", mensagem: "Erro de valida칞칚o" }];
}
