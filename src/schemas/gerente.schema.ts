import { z, ZodError } from "zod";

// 游닂 Schema de cria칞칚o
export const createGerenteSchema = z.object({
    nome: z.string()
        .nonempty("O nome 칠 obrigat칩rio"),
    email: z.string()
        .email("Email inv치lido"),
    senha: z.string()
        .min(6, "A senha deve ter no m칤nimo 6 caracteres")
        .regex(/\d/, "A senha deve conter pelo menos um n칰mero")
        .regex(/[!@#$%^&*(),.?\":{}|<>]/, "A senha deve conter pelo menos um caractere especial"),
});
// 游닂 Schema de atualiza칞칚o
export const updateGerenteSchema = createGerenteSchema.partial();

// 游닂 Schema de exclus칚o
export const deleteGerenteSchema = z.object({
    id: z.number().int("ID inv치lido"),
    gerenteId: z.number().int("ID inv치lido"),
}).refine(data => data.id !== data.gerenteId, {
    message: "Um gerente n칚o pode deletar a si mesmo",
    path: ["gerenteId"],
});

// 游닂 Fun칞칚o para formatar erros do Zod de forma bonita
export function formatZodError(error: unknown) {
    if (error instanceof ZodError) {
        return error.issues.map(err => ({
            campo: err.path.join("."),
            mensagem: err.message,
        }));
    }
    return [{ campo: "desconhecido", mensagem: "Erro de valida칞칚o" }];
}
